name: Release

on:
  release:
    types: [published]
  push:
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-containerfiles:
    name: Build All Container Images for Release
    uses: ./.github/workflows/build-containerfiles.yml
    with:
      tag_pattern: |
        type=semver,pattern={{version}}
        type=semver,pattern={{major}}.{{minor}}
        type=semver,pattern={{major}}
        latest
      push_images: true

  generate-manifests:
    name: Generate Release Manifests
    runs-on: ubuntu-latest
    needs: build-containerfiles
    permissions:
      contents: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Generate deployment manifests
      run: |
        # Create versioned manifests for release
        mkdir -p manifests/release
        cp deployment.yaml manifests/release/

        # Update image version in manifest for all Containerfiles
        # Main image
        sed -i "s|nixos-operator:latest|${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${GITHUB_REF_NAME}|g" manifests/release/deployment.yaml
        # iPXE image (if used in deployment)
        sed -i "s|nixos-operator-ipxe:latest|${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-ipxe:${GITHUB_REF_NAME}|g" manifests/release/deployment.yaml

    - name: Upload release artifacts
      uses: actions/upload-artifact@v4
      with:
        name: kubernetes-manifests
        path: manifests/
        retention-days: 30

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-results.sarif'

  update-documentation:
    name: Update Documentation
    runs-on: ubuntu-latest
    if: github.event_name == 'release'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Update version in README
      run: |
        # Update version in README if needed
        VERSION=${{ github.event.release.tag_name }}
        echo "Updating documentation for version $VERSION"
        # Add documentation update logic here
